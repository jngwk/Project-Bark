/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-03-25 07:55:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.include;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class meberInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>header</title>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("/* 메인 */\r\n");
      out.write("#info_header{\r\n");
      out.write("    position:relative;\r\n");
      out.write("    height:50px;\r\n");
      out.write("    font-family: \"Noto Sans KR\", sans-serif;\r\n");
      out.write("	font-optical-sizing: auto;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("	text-align: center; /* 중앙 정렬 */\r\n");
      out.write("}\r\n");
      out.write("input.profile[type=\"text\"] {\r\n");
      out.write("    border: 1px solid black; /* 테두리 스타일 변경 */\r\n");
      out.write("    color: rgb(94, 94, 94); \r\n");
      out.write("	text-align: right; \r\n");
      out.write("	background-color: rgb(224, 224, 224);\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input.profile[type=\"text\"]:focus {\r\n");
      out.write("    outline: none; /* 클릭했을 때 테두리 스타일 변경 */\r\n");
      out.write("}\r\n");
      out.write("ul {\r\n");
      out.write("    list-style-type: none; /* 불릿 제거 */\r\n");
      out.write("}\r\n");
      out.write(".label-text {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    width: 60px; /* 고정 너비 설정 */\r\n");
      out.write("    font-size: 12px;\r\n");
      out.write("    padding-bottom: 10px;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write(".container {\r\n");
      out.write("    display: flex;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main_info, .info_select {\r\n");
      out.write("    width: 50%;\r\n");
      out.write("    min-width:300px;\r\n");
      out.write("}\r\n");
      out.write(".right1 {\r\n");
      out.write("    padding-top: 20px\r\n");
      out.write("}\r\n");
      out.write(".right2 {\r\n");
      out.write("    padding-top: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<!--  이름 성별 아이디 이메일 회원구분 연락처 연락처2-->\r\n");
      out.write("<body style=\"background: rgb(251, 241, 231)\">\r\n");
      out.write("	<h3 id=\"info_header\">회원 정보 변경</h3>\r\n");
      out.write("	<div class = \"container\">\r\n");
      out.write("		<div class = \"main_info\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("				<li><span class=\"label-text\">이름</span> : \r\n");
      out.write("				<input class=\"profile\" type=\"text\" data-text-content=\"true\" \r\n");
      out.write("				value=\"홍길동\" readonly></li>\r\n");
      out.write("				\r\n");
      out.write("				<li><span class=\"label-text\">성별</span> : \r\n");
      out.write("				<input class=\"profile\" type=\"text\" data-text-content=\"true\" \r\n");
      out.write("				value=\"남자\" readonly></li>\r\n");
      out.write("				\r\n");
      out.write("				<li><span class=\"label-text\">아이디</span> : \r\n");
      out.write("				<input class=\"profile\" type=\"text\" data-text-content=\"true\" \r\n");
      out.write("				value=\"bark123\" readonly></li>\r\n");
      out.write("	\r\n");
      out.write("				<li><span class=\"label-text\">이메일</span> : \r\n");
      out.write("				<input class=\"profile\" type=\"text\" data-text-content=\"true\" \r\n");
      out.write("				value=\"bark@gmail.com\" readonly></li>\r\n");
      out.write("				\r\n");
      out.write("				<li><span class=\"label-text\">회원구분</span> : \r\n");
      out.write("				<input class=\"profile\" type=\"text\" data-text-content=\"true\" \r\n");
      out.write("				value=\"일반\" readonly></li>\r\n");
      out.write("				\r\n");
      out.write("				<li><span class=\"label-text\">연락처</span> : \r\n");
      out.write("				<input class=\"profile\" type=\"text\" data-text-content=\"true\" \r\n");
      out.write("				value=\"010-1111-1111\" readonly></li>\r\n");
      out.write("				\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class = \"info_select\">\r\n");
      out.write("			<form class=\"right1\" action=\"/action_page.php\" method=\"post\">\r\n");
      out.write("                <label for=\"options\"><span class=\"label-text\">회원구분</span> :</label>\r\n");
      out.write("                <select id=\"options\" name=\"options\">\r\n");
      out.write("                    <option value=\"option1\">개인회원</option>\r\n");
      out.write("                    <option value=\"option2\">보호소</option>\r\n");
      out.write("                    <option value=\"option3\">관리자</option>\r\n");
      out.write("                    <!-- 필요한 만큼 옵션을 추가하세요 -->\r\n");
      out.write("                </select><br>\r\n");
      out.write("             </form>   \r\n");
      out.write("             <form class=\"right2\" action=\"/action_page2.php\" method=\"post\">\r\n");
      out.write("                <label for=\"options\"><span class=\"label-text\">등 급</span> : </label>\r\n");
      out.write("                <select id=\"options\" name=\"options\">\r\n");
      out.write("                    <option value=\"option1\">일반</option>\r\n");
      out.write("                    <option value=\"option2\">우수</option>\r\n");
      out.write("                    <option value=\"option3\">불량</option>\r\n");
      out.write("                </select><br><br><br>\r\n");
      out.write("                <input type=\"submit\" value=\"수정\" style=\"margin-left: 150px\">\r\n");
      out.write("            </form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
